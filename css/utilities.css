/* Utilities (def: used all around the website) */

.container {
    /* max-width makes sure that the size of the container is never larger
    than 1100px. Similarly, min-width makes sure that the size of the 
    container is never less than abc pixels.
    The container stays in the center because the margin is auto from x-axis. 
    So, when we open the page on a large screen 1100px are left from both 
    side of x-axis.*/
    max-width: 1100px;
    margin: 0 auto;
    /* h1 and h2 elements have margin of 10px in y-axis. This leads to some 
    overflow in y-axis. overflow: auto take care of it. */
    overflow: auto;
    padding: 0 40px;
}

.card {
    background-color: #fff;
    border-radius: 10px;
    /* box-shadow: horizontal-offset vertical-offset blurr color */
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.4);
    /* A positive horizontal-offset puts shadow on right side of the box */
    /* A negative horizontal-offset puts shadow on left side of the box */
    /* For vertical-offset a positive value puts the shadow below the 
    box, a negative value puts the shadow above the box */
    /* For the blur value the higher the number, the more blurred the shadow will be */
    padding: 20px;
    margin: 10px;
    color: #333;
}

.btn {
    display: inline-block;
    padding: 10px 30px;
    cursor: pointer;
    background: var(--primary-color);
    color: #fff;
    border: none;
    border-radius: 5px;
}

.btn-outline {
    background-color: transparent;
    border: 1px #fff solid;
}

.btn:hover {
    /* 1 is the default for scale. So 0.98 scales it down */
    transform: scale(0.98);
}

.text-center {
    text-align: center;
}

.flex {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
}

.grid {
    display: grid;
    /* fr means fraction of the entire space. We can also use repeat(2, 1fr)*/
    grid-template-columns: repeat(2, 1fr);
    /* gap adds gap between the grid elements. It removes the need to add margin */
    gap: 20px;
    justify-content: center;
    align-items: center;
    /* We have a height for .showcase but not for .grid. So, we need the grid to be 100% of .showcase*/
    height: 100%;
}

.grid-3 {
    grid-template-columns: repeat(3, 1fr);
}



/* Margin */
.my-1 {
    /* 1rem is a multiplier of the root element's font-size */
    /* The root element is html which is by default 16px */
    margin: 1rem 0;
}

.my-2 {
    margin: 1.5rem 0;
}

.my-3 {
    margin: 2rem 0;
}

.my-4 {
    margin: 3rem 0;
}

.my-5 {
    margin: 4rem 0;
}

.m-1 {
    margin: 1rem;
}

.m-2 {
    margin: 1.5rem;
}

.m-3 {
    margin: 2rem;
}

.m-4 {
    margin: 3rem;
}

.m-5 {
    margin: 4rem;
}



/* Padding */
.py-1 {
    padding: 1rem 0;
}

.py-2 {
    padding: 1.5rem 0;
}

.py-3 {
    padding: 2rem 0;
}

.py-4 {
    padding: 3rem 0;
}

.py-5 {
    padding: 4rem 0;
}

.p-1 {
    padding: 1rem;
}

.p-2 {
    padding: 1.5rem;
}

.p-3 {
    padding: 2rem;
}

.p-4 {
    padding: 3rem;
}

.p-5 {
    padding: 4rem;
}